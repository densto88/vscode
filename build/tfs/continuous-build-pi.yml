phases:
- phase: Windows
  queue: Perf Pool - Windows
  steps:
  - task: ExtractFiles@1
    displayName: 'Extract files'
    inputs:
      archiveFilePatterns: PerfInsights.zip
      destinationFolder: 'D:\PerfInsights'
  - powershell: 'Start-Process C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -ArgumentList "-ExecutionPolicy UnRestricted -NoProfile -Command `"D:\\PerfInsights\\PerfInsights.ps1 -NoGui -Scenario vmslow -TracingDuration 600 -AcceptDisclaimerAndShareDiagnostics`""' 
    errorActionPreference: continue
    workingDirectory: 'd:\PerfInsights'
    displayName: 'Start PerfInsights'
  - task: NodeTool@0
    inputs:
      versionSpec: "8.9.1"
  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
    inputs:
      versionSpec: "1.3.2"
  - powershell: |
      . build/tfs/win32/exec.ps1
      $ErrorActionPreference = "Stop"
      exec { yarn }
    displayName: Install Dependencies
  - powershell: |
      . build/tfs/win32/exec.ps1
      $ErrorActionPreference = "Stop"
      exec { yarn gulp electron }
    displayName: Download Electron
  - powershell: |
      . build/tfs/win32/exec.ps1
      $ErrorActionPreference = "Stop"
      exec { yarn check-monaco-editor-compilation }
    displayName: Run Monaco Editor Checks
  - powershell: |
      . build/tfs/win32/exec.ps1
      $ErrorActionPreference = "Stop"
      exec { yarn compile }
    displayName: Compile Sources
  - powershell: |
      . build/tfs/win32/exec.ps1
      $ErrorActionPreference = "Stop"
      exec { yarn download-builtin-extensions }
    displayName: Download Built-in Extensions
  - powershell: |
      . build/tfs/win32/exec.ps1
      $ErrorActionPreference = "Stop"
      exec { .\scripts\test.bat --tfs "Unit Tests" }
    displayName: Run Unit Tests
  - powershell: |
      . build/tfs/win32/exec.ps1
      $ErrorActionPreference = "Stop"
      exec { .\scripts\test-integration.bat --tfs "Integration Tests" }
    displayName: Run Integration Tests
  - powershell: |
      . build/tfs/win32/exec.ps1
      $ErrorActionPreference = "Stop"
      exec { yarn smoketest --screenshots "$(Build.ArtifactStagingDirectory)\artifacts" --log "$(Build.ArtifactStagingDirectory)\artifacts\smoketest.log" }
    displayName: Run Smoke Tests
    continueOnError: true
  - task: PublishTestResults@2
    displayName: Publish Tests Results
    inputs:
      testResultsFiles: '*-results.xml'
      searchFolder: '$(Build.ArtifactStagingDirectory)/test-results'
    condition: succeededOrFailed()
  - powershell: |
        $destinationFolder = "D:\a\1\a";
        while (!(Test-Path "D:\log_collection")) { Start-Sleep 10 }
        Start-Sleep 10
        Get-ChildItem -Path D:\log_collection | ForEach-Object {$sourcePath = Join-Path D:\log_collection $_.Name; Copy-Item -Path $sourcePath -Destination $destinationFolder -Recurse}
    errorActionPreference: continue
    displayName: 'Gather PerfInsights Logs'
    timeoutInMinutes: 5
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: LogManLogManYay'
    inputs:
      ArtifactName: LogManLogManYayYay